{"version":3,"file":null,"sources":["../src/api.js","../src/request/paramify.js","../src/request/jsonp.js","../src/yourls-db.js","../src/yourls-url.js","../src/yourls.js"],"sourcesContent":["/*\n * Copyright (C) 2016 Alasdair Mercer\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * The singleton {@link API} instance which is privatized to prevent leaking credentials.\n *\n * @private\n * @type {API}\n */\nvar instance = null\n\n/**\n * Sanitizes the specified <code>credentials</code> by ensuring that only valid properties are present and only when\n * appropriate.\n *\n * This function does not modify <code>credentials</code> and instead creates a new object with the sanitized\n * properties.\n *\n * @param {API~Credentials} credentials - the credentials to be sanitized (may be <code>null</code>)\n * @return {API~Credentials} A sanitized version of <code>credentials</code> or <code>null</code> if\n * <code>credentials</code> is <code>null</code>.\n * @private\n */\nfunction sanitizeCredentials(credentials) {\n  if (!credentials) {\n    return null\n  }\n\n  var result = {}\n  if (credentials.signature) {\n    result.signature = credentials.signature\n    result.timestamp = credentials.timestamp\n  } else {\n    result.password = credentials.password\n    result.username = credentials.username\n  }\n\n  return result\n}\n\n/**\n * Contains information on how to connect to and authenticate with a YOURLS server.\n *\n * @param {string} [url=''] - the URL for the YOURLS server\n * @param {API~Credentials} [credentials] - the credentials to be used to authenticate with the YOURLS API (may be\n * <code>null</code>)\n * @protected\n * @constructor\n */\nexport function API(url, credentials) {\n  /**\n   * The URL of the YOURLS server.\n   *\n   * @public\n   * @type {string}\n   */\n  this.url = url ? url.replace(/\\/$/, '') : ''\n  /**\n   * The credentials to be used to authenticate with the YOURLS API.\n   *\n   * This may be <code>null</code> if the YOURLS API is public.\n   *\n   * @public\n   * @type {API~Credentials}\n   */\n  this.credentials = sanitizeCredentials(credentials)\n}\n\n/**\n * Destroys the singleton instance of {@link API}.\n *\n * @return {void}\n * @public\n * @static\n */\nAPI.clear = function() {\n  instance = null\n}\n\n/**\n * Retrieves the singleton instance of {@link API}.\n *\n * This function will return <code>null</code> unless an instance is currently stored.\n *\n * @return {API} The connected {@link API} or <code>null</code> if none exists.\n * @public\n * @static\n */\nAPI.fetch = function() {\n  return instance\n}\n\n/**\n * Stores this {@link API} as the singleton, potentially replacing the existing instance.\n *\n * @return {void}\n * @public\n */\nAPI.prototype.store = function() {\n  instance = this\n}\n\n/**\n * The credentials to be used to authenticate with a private YOURLS API.\n *\n * Authentication can be done with a traditional username and password combination <b>or</b> by using the secret\n * signature token (e.g. <code>1002a612b4</code>)for the YOURLS API. The latter is not available for public YOURLS APIs\n * and can be found on the \"Tools\" page.\n *\n * Optionally, a timestamp can accompany the signature token to make it time-limited (depending on the server\n * configuration). When a timestamp is provided the signature token <b>must</b> be the md5 sum of the timestamp and\n * signature token concatenated, and in that order.\n *\n * @typedef {Object} API~Credentials\n * @property {string} [password] - The password of the user to be authenticated.\n * @property {string} [username] - The name of the user to be authenticated.\n * @property {string} [signature] - The signature token to be used for passwordless authentication with the YOURLS API.\n * @property {number|string} [timestamp] - The optional timestamp to limit the <code>signature</code> token.\n */\n","/*\n * Copyright (C) 2016 Alasdair Mercer\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Creates a serialized representation of the specified <code>params</code> into a URL query string.\n *\n * @param {Object} [params] - the hash of parameter key/value pairs to be serialized\n * @return {string} A URL query string representing <code>params</code>.\n * @protected\n */\nexport function paramify(params) {\n  if (!params) {\n    return ''\n  }\n\n  var results = []\n\n  for (var key in params) {\n    if (Object.prototype.hasOwnProperty.call(params, key)) {\n      if (params[key] != null) {\n        results.push(encodeURIComponent(key) + '=' + encodeURIComponent(params[key]))\n      }\n    }\n  }\n\n  return results.join('&')\n}\n","/*\n * Copyright (C) 2016 Alasdair Mercer\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { API } from '../api'\nimport { paramify } from './paramify'\n\n/**\n * The key of the callback function holder within the global namespace.\n *\n * @private\n * @type {string}\n */\nvar callbackHolderKey = '__yourls' + Date.now() + '_jsonp'\n/**\n * Contains the callback functions for active JSONP requests.\n *\n * Callback references should be removed immediately once they have been called.\n *\n * Due to the nature of JSON, a reference to this object <b>must</b> be publicly available (i.e. global).\n *\n * @private\n * @type {Object<number, Function>}\n */\nvar callbackHolder = window[callbackHolderKey] = {}\n\n/**\n * Generates a quick and dirty unique ID for a callback.\n *\n * @return {number} The generated callback ID.\n * @private\n */\nfunction generateCallbackId() {\n  var id = Date.now()\n  while (callbackHolder[id]) {\n    id++\n  }\n\n  return id\n}\n\n/**\n * Extracts the values of the properties with the specified <code>names</code> from the <code>response</code> provided\n * and returns them in a single result.\n *\n * If <code>names</code> is a string or only contains a single string, only the value for that named property will be\n * returned. Otherwise, an object containing the key/value pairs for each named property will be returned.\n *\n * If <code>response</code> is <code>null</code> this function will return <code>null</code>.\n *\n * @param {string|string[]} names - the names of the <code>response</code> properties whose values are to be returned as\n * the result\n * @param {Object} response - the YOURLS API response\n * @return {*} The result extracted from <code>response</code>.\n * @private\n */\nfunction getResult(names, response) {\n  names = Object.prototype.toString.call(names) === '[object Array]' ? names : [ names ]\n\n  var i\n  var name\n  var result = null\n\n  if (!response) {\n    return result\n  }\n\n  if (names.length === 1) {\n    result = response[names[0]]\n  } else {\n    result = {}\n\n    for (i = 0; i < names.length; i++) {\n      name = names[i]\n\n      if (typeof response[name] !== 'undefined') {\n        result[name] = response[name]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Sends a JSONP request to the connected YOURLS API with the <code>data</code> provided which should, in turn, call the\n * specified <code>callback</code> with the result.\n *\n * If the request is successful, <code>callback</code> will be passed the value of the named properties from the\n * response. If <code>resultNames</code> is a string or only contains a single string, only the value for that named\n * property will be passed as the first argument. Otherwise, an object containing the key/value pairs for each named\n * property will be passed as the first argument. The actual response will always be passed as the second argument.\n *\n * Due to the nature of JSONP, all information will be included in the URL of the request. This includes\n * <code>data</code> as well as <b>any credentials</b> used to authenticate with the API. You have been warned.\n *\n * @param {Object} data - the data to be sent\n * @param {string|string[]} resultNames - the names of the response properties whose values are to be passed to\n * <code>callback</code> as the first argument\n * @param {Function} callback - the function to be called with the result\n * @return {void}\n * @protected\n */\nexport function jsonp(data, resultNames, callback) {\n  var api = API.fetch()\n  var id = generateCallbackId()\n  var script = document.createElement('script')\n\n  callbackHolder[id] = function(response) {\n    var result = getResult(resultNames, response)\n\n    delete callbackHolder[id]\n    script.parentNode.removeChild(script)\n\n    callback(result, response)\n  }\n\n  var target = api.url + '?' + paramify({ callback: callbackHolderKey + '[' + id + ']', format: 'jsonp' })\n  if (api.credentials) {\n    target += '&' + paramify(api.credentials)\n  }\n  if (data) {\n    target += '&' + paramify(data)\n  }\n\n  script.setAttribute('src', target)\n  document.getElementsByTagName('head')[0].appendChild(script)\n}\n","/*\n * Copyright (C) 2016 Alasdair Mercer\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { jsonp } from './request/jsonp'\n\n/**\n * Provides the ability to lookup information related to the YOURLS database.\n *\n * @constructor\n * @protected\n */\nexport function DB() {\n  // Do nothing\n}\n\n/**\n * Retrieves the statistics for this {@link DB}.\n *\n * @param {Function} callback - the callback function to be called with the result\n * @return {DB} A reference to this {@link DB} for chaining purposes.\n * @public\n */\nDB.prototype.stats = function(callback) {\n  var data = { action: 'db-stats' }\n\n  jsonp(data, 'db-stats', callback)\n\n  return this\n}\n","/*\n * Copyright (C) 2016 Alasdair Mercer\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE0\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { jsonp } from './request/jsonp'\n\n/**\n * Provides the ability to lookup information related to the specified shortened <code>url</code>.\n *\n * @param {string} url - the shortened URL (or its keyword) to be used\n * @constructor\n * @protected\n */\nexport function URL(url) {\n  /**\n   * Either the shortened URL or its keyword for this {@link URL}.\n   *\n   * @public\n   * @type {string}\n   */\n  this.url = url\n}\n\n/**\n * Retrieves the original (\"long\") URL for this shortened {@link URL}.\n *\n * @param {Function} callback - the callback function to be called with the result\n * @return {URL} A reference to this {@link URL} for chaining purposes.\n * @public\n */\nURL.prototype.expand = function(callback) {\n  var data = {\n    action: 'expand',\n    shorturl: this.url\n  }\n\n  jsonp(data, [ 'keyword', 'longurl', 'shorturl' ], callback)\n\n  return this\n}\n\n/**\n * Retrieves the statistics for this shortened {@link URL}.\n *\n * @param {Function} callback - the callback function to be called with the result\n * @return {URL} A reference to this {@link URL} for chaining purposes.\n * @public\n */\nURL.prototype.stats = function(callback) {\n  var data = {\n    action: 'url-stats',\n    shorturl: this.url\n  }\n\n  jsonp(data, 'link', callback)\n\n  return this\n}\n","/*\n * Copyright (C) 2016 Alasdair Mercer\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { API } from './api'\nimport { DB } from './yourls-db'\nimport { jsonp } from './request/jsonp'\nimport { URL } from './yourls-url'\n\n/**\n * Provides the ability to connect to YOURLS servers and perform read/write operations via the API that they expose.\n *\n * Before attempting to interact with a YOURLS server, you <b>must</b> call {@link YOURLS#connect} first to configure\n * the URL of the YOURLS server and any credentials required to authenticate with its API (only required when private).\n *\n * @constructor\n * @protected\n */\nvar YOURLS = function() {\n  /**\n   * Provides information on the YOURLS {@link DB}.\n   *\n   * @public\n   * @type {DB}\n   */\n  this.db = new DB()\n\n  /**\n   * The current version of <code>yourls</code>.\n   *\n   * @public\n   * @type {string}\n   */\n  this.version = '2.0.0'\n}\n\n/**\n * Stores the specified information to be used later to connect to and authenticate with a YOURLS server.\n *\n * @param {string} [url=''] - the URL for the YOURLS server\n * @param {API~Credentials} [credentials] - the credentials to be used to authenticate with the YOURLS API (may be\n * <code>null</code>)\n * @return {YOURLS} A reference to this {@link YOURLS} for chaining purposes.\n * @public\n */\nYOURLS.prototype.connect = function(url, credentials) {\n  var api = new API(url, credentials)\n  api.store()\n\n  return this\n}\n\n/**\n * Clears any information that may have been previously stored for connecting to and authenticating with a YOURLS\n * server.\n *\n * @return {YOURLS} A reference to this {@link YOURLS} for chaining purposes.\n * @public\n */\nYOURLS.prototype.disconnect = function() {\n  API.clear()\n\n  return this\n}\n\n/**\n * Creates a short URL for the specified long <code>url</code>.\n *\n * Optionally, a <code>descriptor</code> can be provided to specify a keyword and/or title for the short URL that is to\n * be created. If a keyword is specified, it must be available and, if not, the YOURLS server will generate a unique\n * keyword. If <code>descriptor</code> is a string, it will be treated as a keyword.\n *\n * @param {string} url - the long URL to be shortened\n * @param {YOURLS~Descriptor|string} [descriptor] - the optional descriptor (or keyword, if it's a string) to be used\n * for the short URL\n * @param {Function} callback - the callback function to be called with the result\n * @return {YOURLS} A reference to this {@link YOURLS} for chaining purposes.\n * @public\n */\nYOURLS.prototype.shorten = function(url, descriptor, callback) {\n  var data = {\n    action: 'shorturl',\n    url: url\n  }\n\n  switch (typeof descriptor) {\n  case 'function':\n    callback = descriptor\n    descriptor = null\n    break\n  case 'string':\n    descriptor = { keyword: descriptor }\n    break\n  default:\n    // Do nothing\n  }\n\n  if (descriptor) {\n    data.keyword = descriptor.keyword\n    data.title = descriptor.title\n  }\n\n  jsonp(data, [ 'shorturl', 'title', 'url' ], callback)\n\n  return this\n}\n\n/**\n * Retrieves the statistics for all shortened URLs.\n *\n * Optionally, the results can be filtered and even limited to provide greater control.\n *\n * @param {string} [filter] - the filter to be applied (either <code>\"top\"</code>, <code>\"bottom\"</code>,\n * <code>\"rand\"</code>, or <code>\"last\"</code>) (may be <code>null</code> for all)\n * @param {number} [limit] - the maximum number of URLs to be returned (may be <code>null</code> for all)\n * @param {Function} callback - the callback function to be called with the result\n * @return {YOURLS} A reference to this {@link YOURLS} for chaining purposes.\n * @public\n */\nYOURLS.prototype.stats = function(filter, limit, callback) {\n  var data = { action: 'stats' }\n\n  switch (typeof filter) {\n  case 'number':\n    callback = limit\n    limit = filter\n    filter = null\n    break\n  case 'function':\n    callback = filter\n    filter = limit = null\n    break\n  default:\n    if (typeof limit === 'function') {\n      callback = limit\n      limit = null\n    }\n  }\n\n  data.filter = filter\n  data.limit = limit\n\n  jsonp(data, 'stats', callback)\n\n  return this\n}\n\n/**\n * Creates an instance of {@link URL} for the specified shortened <code>url</code> which can be used to lookup more\n * detailed information relating to it.\n *\n * No data is fetched just by calling this function; one of the functions on the returned instance need to be called for\n * that to happen.\n *\n * @param {string} url - the shortened URL (or its keyword)\n * @return {URL} The {@link URL} created for the shortened <code>url</code> or <code>null</code> if <code>url</code> is\n * <code>null</code>.\n * @public\n */\nYOURLS.prototype.url = function(url) {\n  return url ? new URL(url) : null\n}\n\n/**\n * The singleton instance of {@link YOURLS}.\n */\nexport default new YOURLS()\n\n/**\n * Contains additional information which can be used when shortening a URL.\n *\n * If <code>keyword</code> is specified, it must be available and, if not, the YOURLS server will generate a unique\n * keyword.\n *\n * @typedef {Object} YOURLS~Descriptor\n * @property {string} [keyword] - The optional keyword to be used for the shortened URL.\n * @property {string} [title] - The optional title to be associated with the shortened URL.\n */\n"],"names":[],"mappings":"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"}